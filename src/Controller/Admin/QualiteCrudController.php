<?php

namespace App\Controller\Admin;

use App\Entity\Qualite;
use EasyCorp\Bundle\EasyAdminBundle\Config\Crud;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController;
use EasyCorp\Bundle\EasyAdminBundle\Field\IdField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextField;
use EasyCorp\Bundle\EasyAdminBundle\Field\MoneyField;

final class QualiteCrudController extends AbstractCrudController
{
    public static function getEntityFqcn(): string
    {
        return Qualite::class;
    }

    public function configureCrud(Crud $crud): Crud
    {
        return $crud
            ->setEntityLabelInSingular('Qualit√©')
            ->setEntityLabelInPlural('Qualit√©s')
            ->setPageTitle(Crud::PAGE_INDEX, 'Qualit√©s de s√©ance')
            ->setPageTitle(Crud::PAGE_NEW, 'Cr√©er une qualit√©')
            ->setPageTitle(Crud::PAGE_EDIT, 'Modifier la qualit√©')
            ->setPageTitle(Crud::PAGE_DETAIL, 'D√©tail de la qualit√©')
            // üîí acc√®s r√©serv√©
            ->setEntityPermission('ROLE_SUPER_ADMIN');
    }

    public function configureFields(string $pageName): iterable
    {

        yield TextField::new('label', 'Libell√©')
            ->setHelp('Ex: "IMAX 3D", "Version Originale", "Standard"‚Ä¶');

        // L‚Äôentit√© stocke prix en DECIMAL(string) ‚Üí MoneyField sait lire via getPrix()
        yield MoneyField::new('prix', 'Prix')
            ->setCurrency('EUR')
            ->setNumDecimals(2)
            ->setStoredAsCents(false)   // <<< important
            ->setHelp('Tarif appliqu√© aux s√©ances de cette qualit√©.');
    }
}
