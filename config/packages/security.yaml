security:
  providers:
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email

  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

  role_hierarchy:
    ROLE_SUPER_ADMIN: [ROLE_ADMIN]
    ROLE_ADMIN: [ROLE_USER]

  firewalls:
    # D√©sactive la s√©curit√© pour le profiler & assets
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    # üîê Login JSON pour l'API mobile (LexikJWT)
    login:
      pattern: ^/api/login_check
      stateless: true
      json_login:
        check_path: /api/login_check          # endpoint POST
        username_path: email                  # champ JSON envoy√© par Flutter
        password_path: password               # champ JSON envoy√© par Flutter
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure

    # üîê Firewall API prot√©g√© par JWT (Bearer ...)
    api:
      pattern: ^/api
      stateless: true
      jwt: ~                                  # authenticator fourni par LexikJWT

    # üîê Firewall principal pour le site web (form_login)
    main:
      lazy: true
      provider: app_user_provider

      form_login:
        login_path: app_auth                  # GET /auth (affichage)
        check_path: app_auth                  # POST /auth (soumission)
        enable_csrf: true
        csrf_token_id: authenticate
        username_parameter: email
        password_parameter: password

      logout:
        path: app_logout
        target: app_home

  access_control:
    # --- Public ---
    - { path: ^/auth$, roles: PUBLIC_ACCESS }
    - { path: ^/mot-de-passe/(oublie|reinitialiser), roles: PUBLIC_ACCESS }
    - { path: ^/(_(profiler|wdt)|css|images|js)/, roles: PUBLIC_ACCESS }

    # --- API ---
    - { path: ^/api/login_check$, roles: PUBLIC_ACCESS }          # login JSON public
    - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }               # le reste de l'API n√©cessite JWT

    # --- Espace appli web ---
    - { path: ^/admin, roles: ROLE_ADMIN }
    - { path: ^/mon-espace, roles: ROLE_USER }

when@test:
  security:
    password_hashers:
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
        algorithm: auto
        cost: 4
        time_cost: 3
        memory_cost: 10

parameters:
  mailer_from: '%env(MAILER_FROM)%'
